#!/usr/bin/python

from os import environ
from pathlib import Path
from subprocess import run, PIPE

target = environ.get("target")
assert target, "no $target set in the environment, aborting"
assert isinstance(target, str), "$target environment variable must be a string"

wants_dir = Path(target) / "etc/systemd/system/grml-boot.target.wants/"
print("enabling ssh.service in", str(wants_dir))
assert not str(wants_dir).startswith("/etc"), "wants dir starts with /etc"
wants_dir.mkdir(exist_ok=True)
(wants_dir / "ssh.service").symlink_to("/lib/systemd/system/ssh.service")

print("generating SSH keys in", target)
run(["chroot", target, "ssh-keygen", "-A"], check=True)

count = 0
for path in (Path(target) / "etc/ssh").iterdir():
    if not path.suffix == "_key.pub":
        continue
    print(str(path))
    cmd = [
        "chroot",
        target,
        "ssh-keygen",
        "-l",
        "-f",
        str(path).removeprefix(target),
    ]

    ret = run(cmd, check=True, stdout=PIPE, stderr=PIPE, text=True)
    print(ret.stdout, end='')
    print(ret.stderr, end='')
    count += 1
assert count, "no SSH keys found in %s" % (Path(target) / "etc/ssh")

print("enabling SSH in", target)
run(["chroot", target, "ssh-keygen", "-A"], check=True)
